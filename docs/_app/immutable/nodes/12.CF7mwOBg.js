import{S as W,i as D,s as O,n as P,d as e,p as H,q as R,a as t,c as l,r as U,g as v,e as g,h as m,k as h,j as f}from"../chunks/B2szZy13.js";import"../chunks/IHki7fMi.js";import{f as j}from"../chunks/CZqoUP2f.js";function F(A){let S,n,I='<div class="container py-6 fadeInUp"><p class="is-size-2 is-family-secondary">Mastering Spring Boot Course</p> <p class="is-size-4 stagger2 mt-4"><span class="tag is-primary">Development</span></p></div>',p,b,u,y='<div class="container"><div class="columns"><div class="column is-4"><p><span class="has-text-weight-bold">Duration:</span> 5 Weeks</p></div> <div class="column is-8"><p class="is-size-4 mb-4 has-text-weight-bold">Contents</p> <p class="mb-4">This 5 week course will take the learner up to speed with Spring Boot with intriduction to Spring Framework and a hands on project.</p> <ul class="mb-4 ml-2"><li>Week 1 - Introduction to Spring Framework</li> <li>Week 2 - Spring Boot Basics</li> <li>Week 3 - RESTful Services with Spring Boot</li> <li>Week 4 - Advanced Spring Boot Concepts</li> <li>Week 5 - Advanced Spring Boot Concepts</li> <li>Project - Task Management System</li></ul> <p class="is-size-4 mb-4 has-text-weight-bold">Pre-requisites</p> <ul class="ml-2"><li>Basic understanding of programming concepts (variables, loops, functions).</li> <li>Familiarity with object-oriented concepts (classes, objects, inheritance).</li> <li>A computer with Java 11+ installed.</li> <li>IntelliJ IDEA or Eclipse (or another Java IDE) installed.</li> <li>Git installed and basic commands known (clone, commit, push, branch).</li></ul> <p class="is-size-4 mb-4 has-text-weight-bold">Instructions</p> <p>Will be Provided</p></div></div></div>',k,a,M='<div class="container"><div class="columns"><div class="column is-6 is-offset-4"><p class="subtitle is-size-4">Week 1: Introduction to Spring Framework</p> <p>Goal: Learn the basics of Spring Framework and what led to the creation of Spring Boot.</p> <div class="card is-shadowless is-slightly-rounded has-background-info mt-2"><div class="card-content"><div class="content"><p class="is-size-4">Introduction to Java Spring</p> <p class="is-size-4 mb-4 has-text-weight-bold">Topics</p> <ul><li>Overview of Java Spring Framework.</li> <li>Dependency injection and Inversion of Control (IoC).</li></ul> <p class="is-size-4 mb-4 has-text-weight-bold">Spring Core Concepts</p> <ul><li>Understanding Beans and their lifecycle.</li> <li>Bean scopes and annotations.</li></ul> <p class="is-size-4 mb-4 has-text-weight-bold">Introduction to Spring Boot</p> <ul><li>Overview of Spring Boot and its advantages.</li> <li>Setting up a Spring Boot project.</li></ul></div></div></div></div></div></div>',T,o,x='<div class="container"><div class="columns"><div class="column is-6 is-offset-4"><p class="subtitle is-size-4">Week 2: Spring Boot Basics</p> <p>Goal: Learn the basics of Spring Boot.</p> <div class="card is-shadowless is-slightly-rounded has-background-info mt-2"><div class="card-content"><div class="content"><p class="is-size-4">Spring Boot Configuration</p> <p class="is-size-4 mb-4 has-text-weight-bold">Topics</p> <ul><li>Application properties and YAML configurations.</li> <li>Profiles in Spring Boot.</li></ul> <p class="is-size-4 mb-4 has-text-weight-bold">Spring Boot MVC</p> <ul><li>Building a simple MVC application.</li> <li>Understanding controllers, views, and models.</li></ul></div></div></div></div></div></div>',B,c,_='<div class="container"><div class="columns"><div class="column is-6 is-offset-4"><p class="subtitle is-size-4">Week 3: RESTful Services with Spring Boot</p> <p>Goal: Learn RESTful web services with Spring Boot.</p> <div class="card is-shadowless is-slightly-rounded has-background-info mt-2"><div class="card-content"><div class="content"><p class="is-size-4">Introduction to RESTful Web Services</p> <ul><li>REST principles and HTTP methods.</li> <li>Building RESTful services with Spring Boot.</li> <li>Consuming RESTful services.</li> <li>Handling exceptions and error messages.</li></ul> <p class="is-size-4">Spring Boot Data with Spring Data JPA</p> <ul><li>Introduction to Spring Data JPA.</li> <li>Connecting to databases and performing CRUD operations.</li></ul></div></div></div></div></div></div>',C,r,E='<div class="container"><div class="columns"><div class="column is-6 is-offset-4"><p class="subtitle is-size-4">Week 4 &amp; 5: Advanced Spring Boot Concepts</p> <p>Goal: Learn advanced concepts</p> <div class="card is-shadowless is-slightly-rounded has-background-info mt-2"><div class="card-content"><div class="content"><p class="is-size-4">Spring Boot Security</p> <ul><li>Introduction to Spring Security.</li> <li>Securing a Spring Boot application.</li></ul> <p class="is-size-4">Microservices with Spring Boot</p> <ul><li>Overview of microservices architecture.</li> <li>Building microservices with Spring Boot.</li></ul> <p class="is-size-4">Testing in Spring Boot</p> <ul><li>Writing unit tests and integration tests.</li> <li>Using JUnit and Mockito.</li></ul> <p class="is-size-4">Deployment and Monitoring</p> <ul><li>Preparing a Spring Boot application for deployment.</li> <li>Introduction to monitoring tools.</li></ul></div></div></div></div></div></div>',z,d,L=`<div class="container"><div class="columns"><div class="column is-6 is-offset-4"><p class="subtitle is-size-4">Final Project: Task Management System</p> <p>Goal: Apply the concepts learned in the course to build a complete Spring Boot application.</p> <div class="card is-shadowless is-slightly-rounded has-background-info mt-2"><div class="card-content"><div class="content"><p class="is-size-4">Objective</p> <p>Build a web-based task management system that allows users to create, update, and delete tasks. The system should provide features for organizing tasks, setting deadlines, and categorizing tasks.</p> <p class="is-size-4">Features</p>
							
                            Task CRUD Operations:
                            <ul><li>Users can create, view, update, and delete tasks.</li> <li>Each task should have a title, description, deadline, and status.</li></ul>
                            Task Categories:
                            <ul><li>Tasks can be categorized into different types (e.g., work, personal, study).</li> <li>Users can create, edit, and delete categories.</li></ul>
                            
                            Search and Filtering:
                            <ul><li>Allow users to search for tasks based on keywords, categories, or status.</li></ul>
                            RESTful API:
                            <ul><li>Implement a RESTful API for task management.</li> <li>Include endpoints for CRUD operations on tasks and categories.</li></ul></div></div></div></div></div></div>`,w;return{c(){S=h(),n=f("section"),n.innerHTML=I,b=h(),u=f("section"),u.innerHTML=y,k=h(),a=f("section"),a.innerHTML=M,T=h(),o=f("section"),o.innerHTML=x,B=h(),c=f("section"),c.innerHTML=_,C=h(),r=f("section"),r.innerHTML=E,z=h(),d=f("section"),d.innerHTML=L,this.h()},l(i){U("svelte-19qz6ag",document.head).forEach(e),S=v(i),n=g(i,"SECTION",{class:!0,"data-svelte-h":!0}),m(n)!=="svelte-1jonmo4"&&(n.innerHTML=I),b=v(i),u=g(i,"SECTION",{class:!0,"data-svelte-h":!0}),m(u)!=="svelte-71u6j8"&&(u.innerHTML=y),k=v(i),a=g(i,"SECTION",{class:!0,id:!0,"data-svelte-h":!0}),m(a)!=="svelte-1uh6jw6"&&(a.innerHTML=M),T=v(i),o=g(i,"SECTION",{class:!0,id:!0,"data-svelte-h":!0}),m(o)!=="svelte-rkz9xe"&&(o.innerHTML=x),B=v(i),c=g(i,"SECTION",{class:!0,id:!0,"data-svelte-h":!0}),m(c)!=="svelte-1mwwc2g"&&(c.innerHTML=_),C=v(i),r=g(i,"SECTION",{class:!0,id:!0,"data-svelte-h":!0}),m(r)!=="svelte-6z2en2"&&(r.innerHTML=E),z=v(i),d=g(i,"SECTION",{class:!0,id:!0,"data-svelte-h":!0}),m(d)!=="svelte-nxwnio"&&(d.innerHTML=L),this.h()},h(){document.title="ae app labs | Courses | Mastering Spring Boot",l(n,"class","section-header banner-bg"),l(u,"class","section fadeInUp"),l(a,"class","section"),l(a,"id","week-1"),l(o,"class","section"),l(o,"id","week-2"),l(c,"class","section"),l(c,"id","week-3"),l(r,"class","section"),l(r,"id","week-4-5"),l(d,"class","section"),l(d,"id","final-project")},m(i,s){t(i,S,s),t(i,n,s),t(i,b,s),t(i,u,s),t(i,k,s),t(i,a,s),t(i,T,s),t(i,o,s),t(i,B,s),t(i,c,s),t(i,C,s),t(i,r,s),t(i,z,s),t(i,d,s),w=!0},p:P,i(i){w||(R(()=>{w&&(p||(p=H(n,j,{},!0)),p.run(1))}),w=!0)},o(i){p||(p=H(n,j,{},!1)),p.run(0),w=!1},d(i){i&&(e(S),e(n),e(b),e(u),e(k),e(a),e(T),e(o),e(B),e(c),e(C),e(r),e(z),e(d)),i&&p&&p.end()}}}class q extends W{constructor(S){super(),D(this,S,null,F,O,{})}}export{q as component};
